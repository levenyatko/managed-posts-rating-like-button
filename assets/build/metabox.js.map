{"version":3,"file":"metabox.js","mappings":"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","sources":["webpack://mpr-likebtn-pannel/./assets/src/metabox-fields.js","webpack://mpr-likebtn-pannel/external window [\"wp\",\"components\"]","webpack://mpr-likebtn-pannel/external window [\"wp\",\"editPost\"]","webpack://mpr-likebtn-pannel/external window [\"wp\",\"element\"]","webpack://mpr-likebtn-pannel/external window [\"wp\",\"i18n\"]","webpack://mpr-likebtn-pannel/external window [\"wp\",\"plugins\"]","webpack://mpr-likebtn-pannel/webpack/bootstrap","webpack://mpr-likebtn-pannel/webpack/runtime/compat get default export","webpack://mpr-likebtn-pannel/webpack/runtime/define property getters","webpack://mpr-likebtn-pannel/webpack/runtime/hasOwnProperty shorthand","webpack://mpr-likebtn-pannel/webpack/runtime/make namespace object","webpack://mpr-likebtn-pannel/./assets/src/metabox.js"],"sourcesContent":["import { __ } from '@wordpress/i18n';\r\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\r\nimport { useEffect, useState } from '@wordpress/element';\r\nimport { TextControl, Button } from '@wordpress/components';\r\n\r\nconst MprRatingMetaboxFields = () => {\r\n\r\n    const [ rowValue, setRowValue] = useState( 0 );\r\n    const [ postRating, setPostRating ] = useState(0);\r\n    const [ message, setMessage ] = useState('');\r\n\r\n    useEffect(() => {\r\n        setPostRating( wp.data.select('core/editor').getEditedPostAttribute('meta')['mpr_score'] );\r\n    }, [ setPostRating ])\r\n\r\n    const post_id =wp.data.select('core/editor').getCurrentPostId();\r\n\r\n    function runApiFetch(a) {\r\n\r\n        if ( \"\" === rowValue ) {\r\n            setMessage( __('Please, check filled fields', 'mpr-likebtn') );\r\n            return;\r\n        }\r\n\r\n        let addRating = parseInt(rowValue);\r\n\r\n        wp.apiRequest({\r\n            path: 'mpr/v1/custom-rate',\r\n            method: 'POST',\r\n            data: {\r\n                id : post_id,\r\n                rate: addRating\r\n            }\r\n        }).then(data => {\r\n            if ( data.success ) {\r\n                setRowValue(0);\r\n                setPostRating(data.new_rating);\r\n            }\r\n            setMessage( data.message );\r\n        });\r\n\r\n    }\r\n\r\n    return (\r\n        <PluginDocumentSettingPanel\r\n            name=\"mpr-panel\"\r\n            title={ __('Rating: ', 'mpr-likebtn') + postRating }\r\n            className=\"mpr-panel\"\r\n        >\r\n            <TextControl\r\n                type='number'\r\n                label={ __('Add Rating', 'mpr-likebtn') }\r\n                value={ rowValue }\r\n                onChange={ setRowValue }\r\n            />\r\n            <Button\r\n                className=\"button button-medium\"\r\n                onClick={ runApiFetch }\r\n            >\r\n                {__(\"Add\", 'mpr-likebtn')}\r\n            </Button>\r\n            <p className='mpr-add-rating-result'>{ message }</p>\r\n        </PluginDocumentSettingPanel>\r\n    );\r\n};\r\n\r\nexport default MprRatingMetaboxFields;","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerPlugin } from '@wordpress/plugins';\r\n\r\nimport MprRatingMetaboxFields from './metabox-fields';\r\n\r\nregisterPlugin( 'mprating', {\r\n    render() {\r\n        return( <MprRatingMetaboxFields label='Rating' /> );\r\n    }\r\n} );"],"names":["__","PluginDocumentSettingPanel","useEffect","useState","TextControl","Button","MprRatingMetaboxFields","rowValue","setRowValue","postRating","setPostRating","message","setMessage","wp","data","select","getEditedPostAttribute","post_id","getCurrentPostId","runApiFetch","a","addRating","parseInt","apiRequest","path","method","id","rate","then","success","new_rating","createElement","name","title","className","type","label","value","onChange","onClick","registerPlugin","render"],"sourceRoot":""}